const char *fp1="!!ARBvp1.0\n"
"OPTION NV_vertex_program3;\n"
"# cgc version 1.5.0014, build date Sep 18 2006 20:36:59\n"
"# command line args: -profile vp40\n"
"# source file: renderRigidBodyVP.cg\n"
"#vendor NVIDIA Corporation\n"
"#version 1.5.0.14\n"
"#profile vp40\n"
"#program main\n"
"#semantic main.modelViewProjMatrix\n"
"#semantic main.modelViewMatrix\n"
"#semantic dt\n"
"#semantic mass\n"
"#semantic averageDistance\n"
"#semantic gravity\n"
"#semantic posTex : TEXUNIT0\n"
"#semantic quatTex : TEXUNIT1\n"
"#semantic quat\n"
"#semantic centerMass\n"
"#var float4 inPosition : $vin.POSITION : ATTR0 : 0 : 1\n"
"#var float4 inNormal : $vin.NORMAL : ATTR2 : 1 : 1\n"
"#var float2 inTexCrd : $vin.TEXCOORD : ATTR8 : 2 : 1\n"
"#var float4x4 modelViewProjMatrix :  : c[0], 4 : 3 : 1\n"
"#var float4x4 modelViewMatrix :  : c[4], 4 : 4 : 1\n"
"#var float4 outPos : $vout.POSITION : HPOS : 5 : 1\n"
"#var float3 outTexCrd : $vout.TEXCOORD1 :  : 6 : 0\n"
"#var float4 outColor : $vout.COLOR0 : COL0 : 7 : 1\n"
"#var float dt :  :  : -1 : 0\n"
"#var float mass :  :  : -1 : 0\n"
"#var float averageDistance :  :  : -1 : 0\n"
"#var float3 gravity :  :  : -1 : 0\n"
"#var sampler2D posTex : TEXUNIT0 : texunit 0 : -1 : 1\n"
"#var sampler2D quatTex : TEXUNIT1 : texunit 1 : -1 : 1\n"
"#var float4 quat :  :  : -1 : 0\n"
"#var float3 centerMass :  :  : -1 : 0\n"
"#const c[8] = 0.015625 1 0.0078125 0.1428571\n"
"#const c[9] = 0.3333333 0.25 0.8 0.2\n"
"#const c[10] = 0 0.5773503\n"
"#default dt = 0.02\n"
"#default mass = 0.02\n"
"#default averageDistance = 1\n"
"#default gravity = 0 -9 0\n"
"#default quat = 1 1 0 1.570796\n"
"#default centerMass = 0.5 0 0\n"
"PARAM c[11] = { program.local[0..7],\n"
"		{ 0.015625, 1, 0.0078125, 0.14285715 },\n"
"		{ 0.33333334, 0.25, 0.80000001, 0.2 },\n"
"		{ 0, 0.57735026 } };\n"
"TEMP R0;\n"
"TEMP R1;\n"
"TEMP R2;\n"
"TEMP R3;\n"
"TEMP R4;\n"
"TEMP RC, HC;\n"
"BB1:\n"
"MUL   R2.zw, vertex.attrib[8].x, c[8].xyxw;\n"
"FLR   R0.y, R2.z;\n"
"ADD   R0.z, R2, -R0.y;\n"
"MOV   R0.x, R0.y;\n"
"MOVC  RC.x, R2.z;\n"
"ADD   R0.x(LT), R0.y, c[8].y;\n"
"MOV   R0.y, R0.z;\n"
"ADD   R0.y(LT.x), R0.z, -c[8];\n"
"MAD   R4.y, R0.x, c[8].x, c[8].z;\n"
"ADD   R4.x, R0.y, c[8].z;\n"
"TEX   R0, R4, texture[1], 2D;\n"
"MUL   R1.xyz, R0.yxzw, vertex.attrib[2].xzyw;\n"
"MAD   R1.xyz, R0.yzxw, vertex.attrib[2].zxyw, -R1.zyxw;\n"
"MAD   R1.xyz, R0.w, vertex.attrib[2], R1;\n"
"MUL   R2.xyz, R0.w, R1;\n"
"DP3   R1.w, R0, vertex.attrib[2];\n"
"MAD   R3.xyz, -R0, -R1.w, R2;\n"
"MUL   R2.xyz, -R0.xzyw, R1.yxzw;\n"
"MAD   R1.xyz, -R0.zxyw, R1.yzxw, -R2.zyxw;\n"
"ADD   R1.xyz, R1, R3;\n"
"MOV   R1.w, c[10].x;\n"
"DP4   R2.z, R1, c[6];\n"
"DP4   R2.x, R1, c[4];\n"
"DP4   R2.y, R1, c[5];\n"
"DP3   R1.x, R2, R2;\n"
"RSQ   R1.x, R1.x;\n"
"MUL   R1.xyz, R1.x, R2;\n"
"DP3   R2.x, R1, c[10].y;\n"
"MUL   R1.zw, vertex.attrib[8].x, c[9].xyxy;\n"
"SIN   R1.y, R1.z;\n"
"SIN   R1.w, R1.w;\n"
"SIN   R1.x, R2.w;\n"
"MUL   R1.z, R1.w, R1.w;\n"
"MUL   R1.x, R1, R1;\n"
"MUL   R1.y, R1, R1;\n"
"MAD   R1.xyz, R1, c[9].z, c[9].w;\n"
"MUL   result.color.xyz, R1, R2.x;\n"
"MUL   R1.xyz, R0.yxzw, vertex.attrib[0].xzyw;\n"
"MAD   R1.xyz, R0.yzxw, vertex.attrib[0].zxyw, -R1.zyxw;\n"
"MAD   R1.xyz, R0.w, vertex.attrib[0], R1;\n"
"MUL   R2.xyz, R1, R0.w;\n"
"DP3   R0.w, R0, vertex.attrib[0];\n"
"MAD   R3.xyz, -R0, -R0.w, R2;\n"
"MUL   R2.xyz, R1.yxzw, -R0.xzyw;\n"
"MAD   R0.xyz, R1.yzxw, -R0.zxyw, -R2.zyxw;\n"
"MOV   R0.w, c[8].y;\n"
"ADD   R0.xyz, R0, R3;\n"
"TEX   R1, R4, texture[0], 2D;\n"
"ADD   R0.xyz, R0, R1;\n"
"DP4   result.position.w, R0, c[3];\n"
"DP4   result.position.z, R0, c[2];\n"
"DP4   result.position.y, R0, c[1];\n"
"DP4   result.position.x, R0, c[0];\n"
"END\n"
"# 53 instructions, 5 R-regs\n"
;
const char *fp2=
"!!ARBfp1.0\n"
"OPTION NV_fragment_program2;\n"
"# cgc version 1.5.0014, build date Sep 18 2006 20:36:59\n"
"# command line args: -profile fp40\n"
"# source file: updatePosFP.cg\n"
"#vendor NVIDIA Corporation\n"
"#version 1.5.0.14\n"
"#profile fp40\n"
"#program main\n"
"#semantic dt\n"
"#semantic mass\n"
"#semantic averageDistance\n"
"#semantic gravity\n"
"#semantic posTex : TEXUNIT0\n"
"#semantic velTex : TEXUNIT1\n"
"#var float2 texCrd : $vin.TEXCOORD0 : TEX0 : 0 : 1\n"
"#var float4 nextPos : $vout.COLOR : COL : 1 : 1\n"
"#var float dt :  : c[0] : -1 : 1\n"
"#var float mass :  :  : -1 : 0\n"
"#var float averageDistance :  :  : -1 : 0\n"
"#var float3 gravity :  :  : -1 : 0\n"
"#var sampler2D posTex : TEXUNIT0 : texunit 0 : -1 : 1\n"
"#var sampler2D velTex : TEXUNIT1 : texunit 1 : -1 : 1\n"
"#const c[1] = -100\n"
"#default dt = 0.02\n"
"#default mass = 0.02\n"
"#default averageDistance = 1\n"
"#default gravity = 0 -9 0\n"
"PARAM c[2] = { program.local[0],\n"
"		{ -100 } };\n"
"TEMP R0;\n"
"TEMP R1;\n"
"TEMP RC;\n"
"TEMP HC;\n"
"OUTPUT oCol = result.color;\n"
"TEX   R0, fragment.texcoord[0], texture[0], 2D;\n"
"TEX   R1.xyz, fragment.texcoord[0], texture[1], 2D;\n"
"MADR  oCol.xyz, R1, c[0].x, R0;\n"
"MOVR  oCol.w, R0;\n"
"MOVXC RC.x, R0.w;\n"
"MOVR  oCol(LT.x), c[1].x;\n"
"END\n"
"# 6 instructions, 2 R-regs, 0 H-regs\n"
;
const char *fp3=
"!!ARBfp1.0\n"
"OPTION NV_fragment_program2;\n"
"# cgc version 1.5.0014, build date Sep 18 2006 20:36:59\n"
"# command line args: -profile fp40\n"
"# source file: updateQuatFP.cg\n"
"#vendor NVIDIA Corporation\n"
"#version 1.5.0.14\n"
"#profile fp40\n"
"#program main\n"
"#semantic dt\n"
"#semantic mass\n"
"#semantic averageDistance\n"
"#semantic gravity\n"
"#semantic quatTex : TEXUNIT0\n"
"#semantic velTex : TEXUNIT1\n"
"#var float2 texCrd : $vin.TEXCOORD0 : TEX0 : 0 : 1\n"
"#var float4 nextQuat : $vout.COLOR : COL : 1 : 1\n"
"#var float dt :  : c[0] : -1 : 1\n"
"#var float mass :  :  : -1 : 0\n"
"#var float averageDistance :  :  : -1 : 0\n"
"#var float3 gravity :  :  : -1 : 0\n"
"#var sampler2D quatTex : TEXUNIT0 : texunit 0 : -1 : 1\n"
"#var sampler2D velTex : TEXUNIT1 : texunit 1 : -1 : 1\n"
"#const c[1] = 0.0001 0 1 0.5\n"
"#default dt = 0.02\n"
"#default mass = 0.02\n"
"#default averageDistance = 1\n"
"#default gravity = 0 -9 0\n"
"PARAM c[2] = { program.local[0],\n"
"		{ 9.9999997e-005, 0, 1, 0.5 } };\n"
"TEMP R0;\n"
"TEMP R1;\n"
"TEMP R2;\n"
"TEMP R3;\n"
"SHORT TEMP H0;\n"
"TEMP RC;\n"
"TEMP HC;\n"
"OUTPUT oCol = result.color;\n"
"TEX   R0.xyz, fragment.texcoord[0], texture[1], 2D;\n"
"MULR  R1.xyz, R0, c[0].x;\n"
"DP3R  R0.x, R1, R1;\n"
"RSQR  R0.w, R0.x;\n"
"RCPR  R0.x, R0.w;\n"
"MULR  R0.y, R0.x, c[1].w;\n"
"COSR  R1.w, R0.y;\n"
"SLTRC HC.x, R0, c[1];\n"
"SINR  R0.z, R0.y;\n"
"MULR  R1.xyz, R0.w, R1;\n"
"MULR  R1.xyz, R1, R0.z;\n"
"MOVR  R1(NE.x), c[1].yyyz;\n"
"TEX   R0, fragment.texcoord[0], texture[0], 2D;\n"
"MULR  R2.xyz, R0.w, R1;\n"
"MADR  R3.xyz, R0, R1.w, R2;\n"
"MULR  R2.xyz, R0.zyxw, R1.xzyw;\n"
"MADR  R2.xyz, R0.zxyw, R1.yzxw, -R2.yxzw;\n"
"DP3R  R1.x, R0, R1;\n"
"TEX   H0.w, fragment.texcoord[0], texture[1], 2D;\n"
"ADDR  oCol.xyz, R2, R3;\n"
"MADR  oCol.w, R0, R1, -R1.x;\n"
"MOVXC RC.x, H0.w;\n"
"MOVR  oCol(LT.x), R0;\n"
"END\n"
"# 23 instructions, 4 R-regs, 1 H-regs\n"
;
const char *fp4=
"!!ARBfp1.0\n"
"OPTION NV_fragment_program2;\n"
"OPTION ARB_draw_buffers;\n"
"# cgc version 1.5.0014, build date Sep 18 2006 20:36:59\n"
"# command line args: -profile fp40\n"
"# source file: updateDerivFP.cg\n"
"#vendor NVIDIA Corporation\n"
"#version 1.5.0.14\n"
"#profile fp40\n"
"#program main\n"
"#semantic dt\n"
"#semantic mass\n"
"#semantic averageDistance\n"
"#semantic gravity\n"
"#semantic velTex : TEXUNIT0\n"
"#semantic wTex : TEXUNIT1\n"
"#semantic forceOnParticle : TEXUNIT2\n"
"#semantic wForceOnParticle : TEXUNIT3\n"
"#semantic quatTex : TEXUNIT4\n"
"#semantic posTex : TEXUNIT5\n"
"#var float2 texCrd : $vin.TEXCOORD0 : TEX0 : 0 : 1\n"
"#var float4 nextVel : $vout.COLOR0 : COL : 1 : 1\n"
"#var float4 nextW : $vout.COLOR1 : COL1 : 2 : 1\n"
"#var float dt :  : c[0] : -1 : 1\n"
"#var float mass :  : c[1] : -1 : 1\n"
"#var float averageDistance :  :  : -1 : 0\n"
"#var float3 gravity :  :  : -1 : 0\n"
"#var sampler2D velTex : TEXUNIT0 : texunit 0 : -1 : 1\n"
"#var sampler2D wTex : TEXUNIT1 : texunit 1 : -1 : 1\n"
"#var sampler2D forceOnParticle : TEXUNIT2 : texunit 2 : -1 : 1\n"
"#var sampler2D wForceOnParticle : TEXUNIT3 : texunit 3 : -1 : 1\n"
"#var sampler2D quatTex : TEXUNIT4 : texunit 4 : -1 : 1\n"
"#var sampler2D posTex : TEXUNIT5 : texunit 5 : -1 : 1\n"
"#const c[2] = 0 -1 64 0.5\n"
"#const c[3] = 4 0.0078125 128 1\n"
"#const c[4] = 2 3 40 0.995\n"
"#const c[5] = 0 5.0375 8.190001 15\n"
"#default dt = 0.02\n"
"#default mass = 0.02\n"
"#default averageDistance = 1\n"
"#default gravity = 0 -9 0\n"
"PARAM c[6] = { program.local[0..1],\n"
"		{ 0, -1, 64, 0.5 },\n"
"		{ 4, 0.0078125, 128, 1 },\n"
"		{ 2, 3, 40, 0.995 },\n"
"		{ 0, 5.0374999, 8.1900005, 15 } };\n"
"TEMP R0;\n"
"TEMP R1;\n"
"TEMP R2;\n"
"TEMP R3;\n"
"TEMP R4;\n"
"TEMP R5;\n"
"TEMP R6;\n"
"TEMP R7;\n"
"TEMP R8;\n"
"SHORT TEMP H0;\n"
"TEMP RC;\n"
"TEMP HC;\n"
"OUTPUT oCol = result.color;\n"
"OUTPUT oCol1 = result.color[1];\n"
"TEX   R3, fragment.texcoord[0], texture[4], 2D;\n"
"MULR  R1, R3.yxww, R3.yxyx;\n"
"MADR  R0.zw, R3.xyyx, R3.z, -R1.xywz;\n"
"MULR  R2.zw, R0, c[4].x;\n"
"MADR  R0.xy, R3, R3.z, R1.zwzw;\n"
"MULR  R1.zw, R0.xyxy, c[4].x;\n"
"MULR  R0.z, R1.x, c[4].x;\n"
"MADR  R0.w, -R1.y, c[4].x, -R0.z;\n"
"MULR  R4.xyz, R3.zwxw, R3.zzxw;\n"
"MULR  R1.y, R4.x, c[4].x;\n"
"MADR  R1.x, -R1, c[4], -R1.y;\n"
"MULR  R0.xy, R2.z, c[5].xzzw;\n"
"MADR  R0.xyz, R1.z, c[5].yxxw, R0.xyxw;\n"
"ADDR  R0.w, R0, c[3];\n"
"MADR  R6.xyz, R0.w, c[5].xxyw, R0;\n"
"MADR  R0.x, R3, R3.y, R4.y;\n"
"MADR  R0.y, -R4.z, c[4].x, -R1;\n"
"MADR  R3.x, R3, R3.y, -R4.y;\n"
"MULR  R4.w, R3.x, c[4].x;\n"
"ADDR  R3.w, R0.y, c[3];\n"
"ADDR  R1.x, R1, c[3].w;\n"
"MOVR  R0.z, R2;\n"
"MULR  R0.x, R0, c[4];\n"
"MOVR  R0.y, R3.w;\n"
"MULR  R2.xyz, R6.y, R0;\n"
"MOVR  R1.y, R4.w;\n"
"MADR  R4.xyz, R6.x, R1, R2;\n"
"MADR  R3.xy, fragment.texcoord[0], c[2].z, -c[2].w;\n"
"MADR  R2.z, R3.y, c[2], R3.x;\n"
"MADR  R3.x, R2.z, c[3], c[3].w;\n"
"MOVR  R2.xy, c[4];\n"
"MADR  R6.xy, R2.z, c[3].x, R2;\n"
"MULR  R2.xy, R6, c[3].y;\n"
"FLRR  R8.xy, R2;\n"
"MULR  R3.y, R3.x, c[3];\n"
"FLRR  R2.y, R3;\n"
"MADR  R2.x, -R2.y, c[3].z, R3;\n"
"MULR  R2.z, R2, c[3].x;\n"
"MULR  R3.x, R2.z, c[3].y;\n"
"FLRR  R3.z, R3.x;\n"
"ADDR  R3.xy, R2, c[2].w;\n"
"MADR  R2.x, -R3.z, c[3].z, R2.z;\n"
"MOVR  R2.y, R3.z;\n"
"MULR  R7.zw, R3.xyxy, c[3].y;\n"
"ADDR  R2.xy, R2, c[2].w;\n"
"MULR  R7.xy, R2, c[3].y;\n"
"TEX   R3.xyz, R7.zwzw, texture[3], 2D;\n"
"TEX   R2.xyz, R7, texture[3], 2D;\n"
"ADDR  R5.xyz, R2, R3;\n"
"MADR  R2.xy, -R8, c[3].z, R6;\n"
"MOVR  R6.y, R8;\n"
"MOVR  R6.x, R2.y;\n"
"MOVR  R3.x, R2;\n"
"ADDR  R2.xy, R6, c[2].w;\n"
"MOVR  R3.y, R8.x;\n"
"ADDR  R3.xy, R3, c[2].w;\n"
"MULR  R8.xy, R3, c[3].y;\n"
"MULR  R8.zw, R2.xyxy, c[3].y;\n"
"TEX   R2.xyz, R8, texture[3], 2D;\n"
"ADDR  R2.xyz, R5, R2;\n"
"MULR  R5.xy, R0.x, c[5].xzzw;\n"
"MADR  R5.xyz, R1.x, c[5].yxxw, R5.xyxw;\n"
"TEX   R3.xyz, R8.zwzw, texture[3], 2D;\n"
"ADDR  R3.xyz, R2, R3;\n"
"MOVR  R2.y, R1.w;\n"
"MOVR  R2.z, R0.w;\n"
"MOVR  R2.x, R2.w;\n"
"MADR  R4.xyz, R6.z, R2, R4;\n"
"DP3R  R0.w, R4, R3;\n"
"MULR  R4.xy, R3.w, c[5].xzzw;\n"
"MADR  R4.xyz, R4.w, c[5].yxxw, R4.xyxw;\n"
"MADR  R4.xyz, R1.w, c[5].xxyw, R4;\n"
"MULR  R6.xyz, R0, R4.y;\n"
"MADR  R5.xyz, R2.w, c[5].xxyw, R5;\n"
"MULR  R0.xyz, R0, R5.y;\n"
"MADR  R0.xyz, R1, R5.x, R0;\n"
"MADR  R6.xyz, R1, R4.x, R6;\n"
"MADR  R1.xyz, R2, R4.z, R6;\n"
"MADR  R2.xyz, R2, R5.z, R0;\n"
"DP3R  R0.y, R3, R1;\n"
"DP3R  R0.x, R3, R2;\n"
"TEX   R1.xyz, fragment.texcoord[0], texture[1], 2D;\n"
"MADR  R1.xyz, R0.xyww, c[0].x, R1;\n"
"MOVR  R1.w, c[2].x;\n"
"MULR  R0, R1, c[4].w;\n"
"DP3R  R1.x, R0, R0;\n"
"RSQR  R1.w, R1.x;\n"
"MULR  R1.xyz, R1.w, R0;\n"
"MOVR  oCol1.xyz, R0;\n"
"RCPR  R1.w, R1.w;\n"
"SGTRC HC.x, R1.w, c[5].w;\n"
"MULR  oCol1.xyz(NE.x), R1, c[5].w;\n"
"MOVR  R1.w, c[3].x;\n"
"MULR  R1.w, R1, c[1].x;\n"
"RCPR  R1.w, R1.w;\n"
"TEX   R0.xyz, R8, texture[2], 2D;\n"
"TEX   R1.xyz, R7.zwzw, texture[2], 2D;\n"
"TEX   R2.xyz, R7, texture[2], 2D;\n"
"ADDR  R1.xyz, R2, R1;\n"
"ADDR  R0.xyz, R1, R0;\n"
"TEX   R1.xyz, R8.zwzw, texture[2], 2D;\n"
"ADDR  R1.xyz, R0, R1;\n"
"MULR  R1.xyz, R1, R1.w;\n"
"TEX   R0.xyz, fragment.texcoord[0], texture[0], 2D;\n"
"MADR  R0.xyz, R1, c[0].x, R0;\n"
"DP3R  R1.x, R0, R0;\n"
"RSQR  R1.w, R1.x;\n"
"MULR  R1.xyz, R1.w, R0;\n"
"RCPR  R1.w, R1.w;\n"
"MOVR  oCol.xyz, R0;\n"
"SGTRC HC.x, R1.w, c[4].z;\n"
"MULR  oCol.xyz(NE.x), R1, c[4].z;\n"
"TEX   H0.w, fragment.texcoord[0], texture[5], 2D;\n"
"MOVXC RC.x, H0.w;\n"
"MOVR  oCol1.w, R0;\n"
"MOVR  oCol.w, c[2].x;\n"
"MOVR  oCol1(LT.x), c[2].xxxy;\n"
"MOVR  oCol(LT.x), c[2].xxxy;\n"
"END\n"
"# 118 instructions, 9 R-regs, 1 H-regs\n"
;
const char *fp5=
"!!ARBvp1.0\n"
"OPTION NV_vertex_program3;\n"
"# cgc version 1.5.0014, build date Sep 18 2006 20:36:59\n"
"# command line args: -profile vp40\n"
"# source file: renderParticlesVP.cg\n"
"#vendor NVIDIA Corporation\n"
"#version 1.5.0.14\n"
"#profile vp40\n"
"#program main\n"
"#semantic main.modelViewProjMatrix\n"
"#semantic main.modelViewMatrix\n"
"#semantic dt\n"
"#semantic mass\n"
"#semantic averageDistance\n"
"#semantic gravity\n"
"#semantic positionTex : TEXUNIT0\n"
"#semantic collisionTex : TEXUNIT1\n"
"#var float3 texCrd : $vin.POSITION : ATTR0 : 0 : 1\n"
"#var float4x4 modelViewProjMatrix :  : c[0], 4 : 1 : 1\n"
"#var float4x4 modelViewMatrix :  : , 4 : 2 : 0\n"
"#var float4 outPos : $vout.POSITION : HPOS : 3 : 1\n"
"#var float4 outColor : $vout.COLOR0 : COL0 : 4 : 1\n"
"#var float dt :  :  : -1 : 0\n"
"#var float mass :  :  : -1 : 0\n"
"#var float averageDistance :  :  : -1 : 0\n"
"#var float3 gravity :  :  : -1 : 0\n"
"#var sampler2D positionTex : TEXUNIT0 : texunit 0 : -1 : 1\n"
"#var sampler2D collisionTex : TEXUNIT1 : texunit 1 : -1 : 0\n"
"#const c[4] = 0 0.5 1\n"
"#default dt = 0.02\n"
"#default mass = 0.02\n"
"#default averageDistance = 1\n"
"#default gravity = 0 -9 0\n"
"PARAM c[5] = { program.local[0..3],\n"
"		{ 0, 0.5, 1 } };\n"
"TEMP R0;\n"
"TEMP RC, HC;\n"
"BB1:\n"
"TEX   R0.xyz, vertex.attrib[0], texture[0], 2D;\n"
"MOV   R0.w, c[4].z;\n"
"DP4   result.position.w, R0, c[3];\n"
"DP4   result.position.z, R0, c[2];\n"
"DP4   result.position.y, R0, c[1];\n"
"DP4   result.position.x, R0, c[0];\n"
"MOV   result.color, c[4].xxyx;\n"
"END\n"
"# 7 instructions, 1 R-regs\n"
;
const char *fp6=
"!!ARBfp1.0\n"
"OPTION NV_fragment_program2;\n"
"OPTION ARB_draw_buffers;\n"
"# cgc version 1.5.0014, build date Sep 18 2006 20:36:59\n"
"# command line args: -profile fp40\n"
"# source file: computeParticleDistributionFP.cg\n"
"#vendor NVIDIA Corporation\n"
"#version 1.5.0.14\n"
"#profile fp40\n"
"#program main\n"
"#semantic dt\n"
"#semantic mass\n"
"#semantic averageDistance\n"
"#semantic gravity\n"
"#semantic posTex : TEXUNIT0\n"
"#semantic quatTex : TEXUNIT1\n"
"#semantic relativePosTex : TEXUNIT2\n"
"#semantic velTex : TEXUNIT3\n"
"#semantic wVelTex : TEXUNIT4\n"
"#var float2 texCrd : $vin.TEXCOORD0 : TEX0 : 0 : 1\n"
"#var float4 pPos : $vout.COLOR0 : COL : 1 : 1\n"
"#var float4 pVel : $vout.COLOR1 : COL1 : 2 : 1\n"
"#var float4 rp : $vout.COLOR2 : COL2 : 3 : 1\n"
"#var float dt :  :  : -1 : 0\n"
"#var float mass :  :  : -1 : 0\n"
"#var float averageDistance :  :  : -1 : 0\n"
"#var float3 gravity :  :  : -1 : 0\n"
"#var sampler2D posTex : TEXUNIT0 : texunit 0 : -1 : 1\n"
"#var sampler2D quatTex : TEXUNIT1 : texunit 1 : -1 : 1\n"
"#var sampler2D relativePosTex : TEXUNIT2 : texunit 2 : -1 : 1\n"
"#var sampler2D velTex : TEXUNIT3 : texunit 3 : -1 : 1\n"
"#var sampler2D wVelTex : TEXUNIT4 : texunit 4 : -1 : 1\n"
"#const c[0] = 128 0.5 0.25 0.015625\n"
"#const c[1] = 64 0.0078125 4 0.0625\n"
"#const c[2] = 30 -1 0\n"
"#default dt = 0.02\n"
"#default mass = 0.02\n"
"#default averageDistance = 1\n"
"#default gravity = 0 -9 0\n"
"PARAM c[3] = { { 128, 0.5, 0.25, 0.015625 },\n"
"		{ 64, 0.0078125, 4, 0.0625 },\n"
"		{ 30, -1, 0 } };\n"
"TEMP R0;\n"
"TEMP R1;\n"
"TEMP R2;\n"
"TEMP R3;\n"
"TEMP R4;\n"
"TEMP RC;\n"
"TEMP HC;\n"
"OUTPUT oCol2 = result.color[2];\n"
"OUTPUT oCol = result.color;\n"
"OUTPUT oCol1 = result.color[1];\n"
"MADR  R0.xy, fragment.texcoord[0], c[0].x, -c[0].y;\n"
"MADR  R0.z, R0.y, c[0].x, R0.x;\n"
"MULR  R0.y, R0.z, c[0].z;\n"
"FLRR  R0.w, |R0.y|;\n"
"MOVR  R0.x, R0.w;\n"
"MOVRC RC.x, R0.y;\n"
"MOVR  R0.x(LT), -R0.w;\n"
"MULR  R0.w, R0.x, c[1].z;\n"
"ADDR  R0.y, R0.z, -R0.w;\n"
"FLRR  R1.x, |R0.y|;\n"
"SLTRC HC.x, R0.z, R0.w;\n"
"MOVR  R0.y, R1.x;\n"
"MOVR  R0.y(GT.x), -R1.x;\n"
"ADDR  R0.z, R0.y, c[0].y;\n"
"MULR  R0.y, R0.x, c[0].w;\n"
"FLRR  R0.y, R0;\n"
"MOVR  R0.w, c[0].y;\n"
"MULR  R0.zw, R0, c[1].w;\n"
"MADR  R0.x, -R0.y, c[1], R0;\n"
"ADDR  R0.xy, R0, c[1].y;\n"
"TEX   R1, R0.zwzw, texture[2], 2D;\n"
"MULR  R4.xy, R0, c[0].w;\n"
"TEX   R0, R4, texture[1], 2D;\n"
"MULR  R2.xyz, R0.yxzw, R1.xzyw;\n"
"MADR  R2.xyz, R0.yzxw, R1.zxyw, -R2.zyxw;\n"
"MADR  R2.xyz, R0.w, R1, R2;\n"
"MULR  R3.xyz, R2.yxzw, -R0.xzyw;\n"
"MADR  R3.xyz, R2.yzxw, -R0.zxyw, -R3.zyxw;\n"
"MULR  R2.xyz, R2, R0.w;\n"
"DP3R  R0.w, R0, R1;\n"
"MADR  R0.xyz, -R0, -R0.w, R2;\n"
"ADDR  R1.xyz, R3, R0;\n"
"TEX   R0, R4, texture[0], 2D;\n"
"ADDR  R2, R1, R0;\n"
"ADDR  R0.xy, R0.zxzw, -c[1].x;\n"
"MULR  R0.x, R0, R0;\n"
"MADR  R0.x, R0.y, R0.y, R0;\n"
"RSQR  R0.x, R0.x;\n"
"RCPR  R0.x, R0.x;\n"
"SGTRC HC.x, R0, c[2];\n"
"MOVR  R0.w, R2;\n"
"TEX   R0.xyz, R4, texture[4], 2D;\n"
"MULR  R3.xyz, R1.xzyw, R0.yxzw;\n"
"MADR  R0.xyz, R1.zxyw, R0.yzxw, -R3.zyxw;\n"
"MOVR  R0.w(NE.x), c[2].y;\n"
"TEX   R3.xyz, R4, texture[3], 2D;\n"
"ADDR  oCol1.xyz, R3, R0;\n"
"MOVR  oCol2, R1;\n"
"MOVR  oCol.w, R0;\n"
"MOVR  oCol.xyz, R2;\n"
"MOVR  oCol1.w, c[2].z;\n"
"END\n"
"# 51 instructions, 5 R-regs, 0 H-regs\n"
;
const char *fp7=
"!!ARBfp1.0\n"
"OPTION NV_fragment_program2;\n"
"# cgc version 1.5.0014, build date Sep 18 2006 20:36:59\n"
"# command line args: -profile fp40\n"
"# source file: set2BucketFP.cg\n"
"#vendor NVIDIA Corporation\n"
"#version 1.5.0.14\n"
"#profile fp40\n"
"#program main\n"
"#semantic dt\n"
"#semantic mass\n"
"#semantic averageDistance\n"
"#semantic gravity\n"
"#var float4 inColor : $vin.COLOR :  : 0 : 0\n"
"#var float2 texCrd : $vin.TEXCOORD0 :  : 1 : 0\n"
"#var float2 pIndex : $vin.TEXCOORD1 : TEX1 : 2 : 1\n"
"#var float4 outColor : $vout.COLOR : COL : 3 : 1\n"
"#var float3 depth : $vout.DEPTH : DEPR : 4 : 1\n"
"#var float dt :  :  : -1 : 0\n"
"#var float mass :  :  : -1 : 0\n"
"#var float averageDistance :  :  : -1 : 0\n"
"#var float3 gravity :  :  : -1 : 0\n"
"#const c[0] = 6.103516e-005 1\n"
"#default dt = 0.02\n"
"#default mass = 0.02\n"
"#default averageDistance = 1\n"
"#default gravity = 0 -9 0\n"
"PARAM c[1] = { { 6.1035156e-005, 1 } };\n"
"TEMP RC;\n"
"TEMP HC;\n"
"OUTPUT oCol = result.color;\n"
"ADDR  oCol, fragment.texcoord[1].x, c[0].y;\n"
"MULR  result.depth.z, fragment.texcoord[1].x, c[0].x;\n"
"END\n"
"# 2 instructions, 0 R-regs, 0 H-regs\n"
;
const char *fp8=
"!!ARBvp1.0\n"
"OPTION NV_vertex_program3;\n"
"# cgc version 1.5.0014, build date Sep 18 2006 20:36:59\n"
"# command line args: -profile vp40\n"
"# source file: set2BucketVP.cg\n"
"#vendor NVIDIA Corporation\n"
"#version 1.5.0.14\n"
"#profile vp40\n"
"#program main\n"
"#semantic main.modelViewProjMatrix\n"
"#semantic main.modelViewMatrix\n"
"#semantic dt\n"
"#semantic mass\n"
"#semantic averageDistance\n"
"#semantic gravity\n"
"#semantic positionTex : TEXUNIT0\n"
"#var float4 texCrd : $vin.POSITION : ATTR0 : 0 : 1\n"
"#var float4 inColor : $vin.COLOR0 : ATTR3 : 1 : 1\n"
"#var float3 inCrd : $vin.TEXCOORD : ATTR8 : 2 : 1\n"
"#var float4x4 modelViewProjMatrix :  : , 4 : 3 : 0\n"
"#var float4x4 modelViewMatrix :  : , 4 : 4 : 0\n"
"#var float4 outPos : $vout.POSITION : HPOS : 5 : 1\n"
"#var float2 outCrd : $vout.TEXCOORD0 : TEX0 : 6 : 1\n"
"#var float2 pIndex : $vout.TEXCOORD1 : TEX1 : 7 : 1\n"
"#var float4 outColor : $vout.COLOR0 : COL0 : 8 : 1\n"
"#var float dt :  :  : -1 : 0\n"
"#var float mass :  :  : -1 : 0\n"
"#var float averageDistance :  :  : -1 : 0\n"
"#var float3 gravity :  :  : -1 : 0\n"
"#var sampler2D positionTex : TEXUNIT0 : texunit 0 : -1 : 1\n"
"#const c[0] = 1408 0 0.001420455 0.09090909\n"
"#const c[1] = 1 0.5 128\n"
"#default dt = 0.02\n"
"#default mass = 0.02\n"
"#default averageDistance = 1\n"
"#default gravity = 0 -9 0\n"
"PARAM c[2] = { { 1408, 0, 0.0014204546, 0.090909094 },\n"
"		{ 1, 0.5, 128 } };\n"
"TEMP R0;\n"
"TEMP R1;\n"
"TEMP RC, HC;\n"
"BB1:\n"
"TEX   R0.xyz, vertex.attrib[0], texture[0], 2D;\n"
"FLR   R0.xyz, R0.zxyw;\n"
"MUL   R0.w, R0.x, c[0];\n"
"FLR   R1.x, R0.w;\n"
"MOV   R0.x, R1;\n"
"MOVC  RC.x, R0.w;\n"
"ADD   R0.x(LT), R1, c[1];\n"
"ADD   R1.x, R0.w, -R1;\n"
"MOV   R0.w, R1.x;\n"
"ADD   R0.w(LT.x), R1.x, -c[1].x;\n"
"MAD   R0.x, R0, c[1].z, R0.z;\n"
"MAD   R0.y, R0.w, c[0].x, R0;\n"
"ADD   R0.w, R0.x, c[1].y;\n"
"ADD   R0.z, R0.y, c[1].y;\n"
"MUL   R0.xy, R0.zwzw, c[0].z;\n"
"ADD   result.position.xy, R0, -c[1].x;\n"
"MOV   result.color, vertex.attrib[3];\n"
"MOV   result.texcoord[0].xy, vertex.attrib[8];\n"
"MAD   result.texcoord[1].x, vertex.attrib[8].y, c[1].z, vertex.attrib[8].z;\n"
"END\n"
"# 19 instructions, 2 R-regs\n"
;
const char *fp9=
"!!ARBfp1.0\n"
"OPTION NV_fragment_program2;\n"
"# cgc version 1.5.0014, build date Sep 18 2006 20:36:59\n"
"# command line args: -profile fp40\n"
"# source file: collisionFP.cg\n"
"#vendor NVIDIA Corporation\n"
"#version 1.5.0.14\n"
"#profile fp40\n"
"#program main\n"
"#semantic dt\n"
"#semantic mass\n"
"#semantic averageDistance\n"
"#semantic gravity\n"
"#semantic positionTex : TEXUNIT0\n"
"#semantic bucketTex : TEXUNIT1\n"
"#var float2 texCrd : $vin.TEXCOORD0 : TEX0 : 0 : 1\n"
"#var float4 outColor : $vout.COLOR : COL : 1 : 1\n"
"#var float dt :  :  : -1 : 0\n"
"#var float mass :  :  : -1 : 0\n"
"#var float averageDistance :  : c[0] : -1 : 1\n"
"#var float3 gravity :  :  : -1 : 0\n"
"#var sampler2D positionTex : TEXUNIT0 : texunit 0 : -1 : 1\n"
"#var sampler2D bucketTex : TEXUNIT1 : texunit 1 : -1 : 1\n"
"#const c[1] = 255 0 128 0.5\n"
"#const c[2] = -1 1 0.09090909 0.0007102273\n"
"#const c[3] = 255 0 0.0078125 0.0003551136\n"
"#const c[4] = 0.00390625 124\n"
"#default dt = 0.02\n"
"#default mass = 0.02\n"
"#default averageDistance = 1\n"
"#default gravity = 0 -9 0\n"
"PARAM c[5] = { program.local[0],\n"
"		{ 255, 0, 128, 0.5 },\n"
"		{ -1, 1, 0.090909094, 0.00071022729 },\n"
"		{ 255, 0, 0.0078125, 0.00035511365 },\n"
"		{ 0.00390625, 124 } };\n"
"TEMP R0;\n"
"TEMP R1;\n"
"TEMP R2;\n"
"TEMP R3;\n"
"SHORT TEMP H0;\n"
"TEMP RC;\n"
"TEMP HC;\n"
"OUTPUT oCol = result.color;\n"
"MADR  R0.x, fragment.texcoord[0].y, c[1].z, -c[1].w;\n"
"MULR  R0.x, R0, c[1].z;\n"
"MADR  R0.w, fragment.texcoord[0].x, c[1].z, R0.x;\n"
"TEX   R0.xyz, fragment.texcoord[0], texture[0], 2D;\n"
"ADDR  R0.w, R0, -c[1];\n"
"MOVR  R2.z, c[1].y;\n"
"MOVR  R2.w, c[2].x;\n"
"LOOP c[1];\n"
"SLERC HC.x, R2.w, c[2].y;\n"
"BRK   (EQ.x);\n"
"MOVR  R3.x, c[2];\n"
"LOOP c[3];\n"
"SLERC HC.x, R3, c[2].y;\n"
"BRK   (EQ.x);\n"
"MOVR  R3.y, c[2].x;\n"
"LOOP c[3];\n"
"SLERC HC.x, R3.y, c[2].y;\n"
"BRK   (EQ.x);\n"
"ADDR  R1.z, R0, R3.y;\n"
"ADDR  R1.x, R0, R2.w;\n"
"ADDR  R1.y, R0, R3.x;\n"
"FLRR  R1.xyz, R1;\n"
"MULR  R1.w, R1.z, c[2].z;\n"
"FLRR  R2.x, R1.w;\n"
"MOVXC RC.x, R1.w;\n"
"MOVR  R1.z, R2.x;\n"
"ADDR  R1.z(LT.x), R2.x, c[2].y;\n"
"ADDR  R2.x, R1.w, -R2;\n"
"MOVR  R1.w, R2.x;\n"
"ADDR  R1.w(LT.x), R2.x, -c[2].y;\n"
"MADR  R1.x, R1, c[2].w, R1.w;\n"
"MULR  R1.z, R1, c[2];\n"
"MADR  R1.y, R1, c[2].w, R1.z;\n"
"ADDR  R1.x, R1, c[3].w;\n"
"ADDR  R1.y, R1, c[3].w;\n"
"TEX   R1.xy, R1, texture[1], 2D;\n"
"ADDR  R2.xy, R1, -c[2].y;\n"
"FLRR  R1.zw, |R2.xyxy|;\n"
"SNER  H0.xy, R2.yxzw, R0.w;\n"
"SLTRC HC.xy, R1, c[2].y;\n"
"MOVR  R3.z, R1;\n"
"MOVR  R3.z(GT.x), -R1;\n"
"MULR  R1.y, R3.z, c[3].z;\n"
"FLRR  R1.z, R1.y;\n"
"ADDR  R3.z, R1.y, -R1;\n"
"MOVXC RC.x, R1.y;\n"
"MOVR  R1.x, R3.z;\n"
"ADDR  R1.x(LT), R3.z, -c[2].y;\n"
"MOVR  R1.y, R1.z;\n"
"MOVR  R2.x, R2.z;\n"
"ADDR  R1.y(LT.x), R1.z, c[2];\n"
"MOVR  R3.z, c[4].x;\n"
"MADR  R1.y, R1, c[3].z, R3.z;\n"
"ADDR  R1.x, R1, c[4];\n"
"TEX   R1.xyz, R1, texture[0], 2D;\n"
"ADDR  R1.xyz, -R0, R1;\n"
"DP3R  R1.x, R1, R1;\n"
"RSQR  R1.x, R1.x;\n"
"RCPR  R1.x, R1.x;\n"
"SLTR  H0.z, R1.x, c[0].x;\n"
"MULXC HC.x, H0.y, H0.z;\n"
"ADDR  R2.x(NE), R2.z, c[2].y;\n"
"MOVR  R1.x, R1.w;\n"
"MOVR  R1.x(GT.y), -R1.w;\n"
"MULR  R1.x, R1, c[3].z;\n"
"FLRR  R1.z, R1.x;\n"
"MOVXC RC.x, R1;\n"
"MOVR  R1.y, R1.z;\n"
"ADDR  R1.y(LT.x), R1.z, c[2];\n"
"ADDR  R1.z, R1.x, -R1;\n"
"MOVR  R1.x, R1.z;\n"
"ADDR  R1.x(LT), R1.z, -c[2].y;\n"
"MADR  R1.y, R1, c[3].z, R3.z;\n"
"ADDR  R1.x, R1, c[4];\n"
"TEX   R1.xyz, R1, texture[0], 2D;\n"
"ADDR  R1.xyz, -R0, R1;\n"
"DP3R  R1.x, R1, R1;\n"
"RSQR  R1.x, R1.x;\n"
"RCPR  R1.x, R1.x;\n"
"SLTR  H0.y, R1.x, c[0].x;\n"
"MOVR  R2.z, R2.x;\n"
"MULXC HC.x, H0, H0.y;\n"
"ADDR  R2.z(NE.x), R2.x, c[2].y;\n"
"ADDR  R3.y, R3, c[2];\n"
"ENDLOOP;\n"
"ADDR  R3.x, R3, c[2].y;\n"
"ENDLOOP;\n"
"ADDR  R2.w, R2, c[2].y;\n"
"ENDLOOP;\n"
"ADDR  R0.zw, -R0.xyxy, c[1].z;\n"
"SLERC HC.zw, R0.xywz, c[0].x;\n"
"MOVR  R1.x, R2.z;\n"
"SLERC HC.xy, R0.yxzw, c[0].x;\n"
"ADDR  R1.x(NE), R2.z, c[2].y;\n"
"MOVR  R1.y, R1.x;\n"
"ADDR  R1.y(NE.z), R1.x, c[2];\n"
"MOVR  R0.z, R1.y;\n"
"ADDR  R0.z(NE.y), R1.y, c[2].y;\n"
"MOVR  R0.w, R0.z;\n"
"ADDR  R0.w(NE), R0.z, c[2].y;\n"
"SLTR  H0.zw, R0.xyyx, c[1].y;\n"
"SGTR  H0.x, R0.y, c[4].y;\n"
"ADDX_SAT H0.x, H0, H0.z;\n"
"ADDXC_SAT HC.x, H0, H0.w;\n"
"MOVR  R0.w(NE.x), c[1].y;\n"
"MOVR  oCol, R0.w;\n"
"END\n"
"# 106 instructions, 4 R-regs, 1 H-regs\n"
;
const char *fp0=
"!!ARBfp1.0\n"
"OPTION NV_fragment_program2;\n"
"OPTION ARB_draw_buffers;\n"
"# cgc version 1.5.0014, build date Sep 18 2006 20:36:59\n"
"# command line args: -profile fp40\n"
"# source file: computeForceOnParticleFP.cg\n"
"#vendor NVIDIA Corporation\n"
"#version 1.5.0.14\n"
"#profile fp40\n"
"#program main\n"
"#semantic dt\n"
"#semantic mass\n"
"#semantic averageDistance\n"
"#semantic gravity\n"
"#semantic positionTex : TEXUNIT0\n"
"#semantic bucketTex : TEXUNIT1\n"
"#semantic velocityTex : TEXUNIT2\n"
"#semantic rpTex : TEXUNIT3\n"
"#var float2 texCrd : $vin.TEXCOORD0 : TEX0 : 0 : 1\n"
"#var float4 force : $vout.COLOR0 : COL : 1 : 1\n"
"#var float4 wForce : $vout.COLOR1 : COL1 : 2 : 1\n"
"#var float dt :  : c[0] : -1 : 1\n"
"#var float mass :  : c[1] : -1 : 1\n"
"#var float averageDistance :  : c[2] : -1 : 1\n"
"#var float3 gravity :  : c[3] : -1 : 1\n"
"#var sampler2D positionTex : TEXUNIT0 : texunit 0 : -1 : 1\n"
"#var sampler2D bucketTex : TEXUNIT1 : texunit 1 : -1 : 1\n"
"#var sampler2D velocityTex : TEXUNIT2 : texunit 2 : -1 : 1\n"
"#var sampler2D rpTex : TEXUNIT3 : texunit 3 : -1 : 1\n"
"#const c[4] = 0.6 0 0.3 128\n"
"#const c[5] = 0.5 -1 1 0.09090909\n"
"#const c[6] = 255 0 0.0007102273 0.0078125\n"
"#const c[7] = 0.0003551136 0.00390625 0 1\n"
"#const c[8] = 124 0.05\n"
"#default dt = 0.02\n"
"#default mass = 0.02\n"
"#default averageDistance = 1\n"
"#default gravity = 0 -9 0\n"
"PARAM c[9] = { program.local[0..3],\n"
"		{ 0.60000002, 0, 0.30000001, 128 },\n"
"		{ 0.5, -1, 1, 0.090909094 },\n"
"		{ 255, 0, 0.00071022729, 0.0078125 },\n"
"		{ 0.00035511365, 0.00390625, 0, 1 },\n"
"		{ 124, 0.050000001 } };\n"
"TEMP R0;\n"
"TEMP R1;\n"
"TEMP R2;\n"
"TEMP R3;\n"
"TEMP R4;\n"
"TEMP R5;\n"
"TEMP R6;\n"
"TEMP R7;\n"
"TEMP R8;\n"
"TEMP R9;\n"
"TEMP R10;\n"
"TEMP R11;\n"
"SHORT TEMP H0;\n"
"SHORT TEMP H1;\n"
"SHORT TEMP H2;\n"
"TEMP RC;\n"
"TEMP HC;\n"
"OUTPUT oCol = result.color;\n"
"OUTPUT oCol1 = result.color[1];\n"
"TEX   R3, fragment.texcoord[0], texture[0], 2D;\n"
"MULR  R0.x, c[0], c[0];\n"
"RCPR  R0.x, R0.x;\n"
"MULR  R0.y, R0.x, c[1].x;\n"
"MOVR  R0.x, c[5];\n"
"MULR  R4.w, R0.y, c[4].x;\n"
"MADR  R0.x, fragment.texcoord[0].y, c[4].w, -R0;\n"
"RCPR  R0.y, c[0].x;\n"
"MULR  R0.x, R0, c[4].w;\n"
"MULR  R0.y, R0, c[1].x;\n"
"MADR  R0.x, fragment.texcoord[0], c[4].w, R0;\n"
"MOVXC RC.x, R3.w;\n"
"TEX   R4.xyz, fragment.texcoord[0], texture[2], 2D;\n"
"MOVR  R5.xyz, c[4].y;\n"
"MOVR  R6.xyz, c[4].y;\n"
"MOVR  R7.xyz, c[4].y;\n"
"MULR  R5.w, R0.y, c[4].z;\n"
"ADDR  R6.w, R0.x, -c[5].x;\n"
"IF    GE.x;\n"
"MOVR  R3.w, c[5].y;\n"
"LOOP c[6];\n"
"SLERC HC.x, R3.w, c[5].z;\n"
"BRK   (EQ.x);\n"
"MOVR  R7.w, c[5].y;\n"
"LOOP c[6];\n"
"SLERC HC.x, R7.w, c[5].z;\n"
"BRK   (EQ.x);\n"
"MOVR  R8.w, c[5].y;\n"
"LOOP c[6];\n"
"SLERC HC.x, R8.w, c[5].z;\n"
"BRK   (EQ.x);\n"
"ADDR  R0.z, R3, R8.w;\n"
"ADDR  R0.x, R3, R3.w;\n"
"ADDR  R0.y, R3, R7.w;\n"
"FLRR  R0.xyz, R0;\n"
"MULR  R0.w, R0.z, c[5];\n"
"FLRR  R1.x, R0.w;\n"
"MOVXC RC.x, R0.w;\n"
"MOVR  R0.z, R1.x;\n"
"ADDR  R0.z(LT.x), R1.x, c[5];\n"
"ADDR  R1.x, R0.w, -R1;\n"
"MOVR  R0.w, R1.x;\n"
"ADDR  R0.w(LT.x), R1.x, -c[5].z;\n"
"MADR  R0.x, R0, c[6].z, R0.w;\n"
"MULR  R0.z, R0, c[5].w;\n"
"MADR  R0.y, R0, c[6].z, R0.z;\n"
"ADDR  R0.x, R0, c[7];\n"
"ADDR  R0.y, R0, c[7].x;\n"
"TEX   R0, R0, texture[1], 2D;\n"
"ADDR  R1, R0, -c[5].z;\n"
"FLRR  R2, |R1.xwzy|;\n"
"SNER  H0, R1.wzyx, R6.w;\n"
"SGER  H1, R0.wzyx, c[5].z;\n"
"SLTRC HC, R0.xwzy, c[5].z;\n"
"MOVR  R8.x, R2;\n"
"MOVR  R8.x(GT), -R2;\n"
"MULR  R8.y, R8.x, c[6].w;\n"
"FLRR  R2.x, R8.y;\n"
"ADDR  R8.z, R8.y, -R2.x;\n"
"MOVXC RC.x, R8.y;\n"
"MOVR  R8.y, R2.x;\n"
"ADDR  R8.y(LT.x), R2.x, c[5].z;\n"
"MOVR  R2.x, c[7].y;\n"
"MOVR  R8.x, R8.z;\n"
"ADDR  R8.x(LT), R8.z, -c[5].z;\n"
"MULX  H0, H0, H1;\n"
"MOVR  R0.xyz, R7;\n"
"MOVR  R1.xyz, R5;\n"
"MADR  R11.y, R8, c[6].w, R2.x;\n"
"ADDR  R11.x, R8, c[7].y;\n"
"TEX   R8.xyz, R11, texture[0], 2D;\n"
"ADDR  R9.xyz, -R3, R8;\n"
"DP3R  R8.x, R9, R9;\n"
"RSQR  R9.w, R8.x;\n"
"TEX   R8.xyz, R11, texture[2], 2D;\n"
"ADDR  R8.xyz, R8, -R4;\n"
"MULR  R10.xyz, R9.w, R9;\n"
"DP3R  R10.w, R8, R10;\n"
"MADR  R10.xyz, -R10.w, R10, R8;\n"
"RCPR  R10.w, R9.w;\n"
"SLER  H2.x, R10.w, c[2];\n"
"MULXC HC.x, H0.w, H2;\n"
"ADDR  R0.xyz(NE.x), R7, R10;\n"
"ADDR  R0.w, -R10, c[2].x;\n"
"MULR  R7.xyz, R9, R0.w;\n"
"MADR  R1.xyz(NE.x), R9.w, -R7, R5;\n"
"MOVR  R5.xyz, R6;\n"
"MOVR  R0.w, R2;\n"
"MOVR  R0.w(GT), -R2;\n"
"MULR  R0.w, R0, c[6];\n"
"ADDR  R5.xyz(NE.x), R6, R8;\n"
"FLRR  R2.w, R0;\n"
"MOVR  R1.w, R2;\n"
"MOVXC RC.x, R0.w;\n"
"ADDR  R1.w(LT.x), R2, c[5].z;\n"
"ADDR  R2.w, R0, -R2;\n"
"MOVR  R0.w, R2;\n"
"ADDR  R0.w(LT.x), R2, -c[5].z;\n"
"MADR  R8.y, R1.w, c[6].w, R2.x;\n"
"ADDR  R8.x, R0.w, c[7].y;\n"
"TEX   R6.xyz, R8, texture[0], 2D;\n"
"ADDR  R7.xyz, -R3, R6;\n"
"DP3R  R0.w, R7, R7;\n"
"RSQR  R0.w, R0.w;\n"
"TEX   R8.xyz, R8, texture[2], 2D;\n"
"MULR  R6.xyz, R0.w, R7;\n"
"ADDR  R8.xyz, -R4, R8;\n"
"DP3R  R1.w, R8, R6;\n"
"MADR  R9.xyz, -R1.w, R6, R8;\n"
"RCPR  R1.w, R0.w;\n"
"SLER  H0.w, R1, c[2].x;\n"
"ADDR  R1.w, -R1, c[2].x;\n"
"MOVR  R6.xyz, R0;\n"
"MULXC HC.x, H0.z, H0.w;\n"
"ADDR  R6.xyz(NE.x), R0, R9;\n"
"MOVR  R0.xyz, R1;\n"
"MULR  R7.xyz, R7, R1.w;\n"
"MADR  R0.xyz(NE.x), R0.w, -R7, R1;\n"
"MOVR  R1.xyz, R5;\n"
"ADDR  R1.xyz(NE.x), R5, R8;\n"
"MOVR  R0.w, R2.z;\n"
"MOVR  R0.w(GT.z), -R2.z;\n"
"MULR  R1.w, R0, c[6];\n"
"FLRR  R2.z, R1.w;\n"
"ADDR  R2.w, R1, -R2.z;\n"
"MOVXC RC.x, R1.w;\n"
"MOVR  R0.w, R2;\n"
"MOVR  R1.w, R2.z;\n"
"MOVR  R5.xyz, R6;\n"
"ADDR  R0.w(LT.x), R2, -c[5].z;\n"
"ADDR  R1.w(LT.x), R2.z, c[5].z;\n"
"MADR  R2.w, R1, c[6], R2.x;\n"
"ADDR  R2.z, R0.w, c[7].y;\n"
"TEX   R7.xyz, R2.zwzw, texture[0], 2D;\n"
"ADDR  R8.xyz, -R3, R7;\n"
"DP3R  R0.w, R8, R8;\n"
"RSQR  R0.w, R0.w;\n"
"TEX   R7.xyz, R2.zwzw, texture[2], 2D;\n"
"MULR  R9.xyz, R0.w, R8;\n"
"ADDR  R7.xyz, -R4, R7;\n"
"DP3R  R1.w, R7, R9;\n"
"MADR  R9.xyz, -R1.w, R9, R7;\n"
"RCPR  R1.w, R0.w;\n"
"SLER  H0.z, R1.w, c[2].x;\n"
"MULXC HC.x, H0.y, H0.z;\n"
"ADDR  R5.xyz(NE.x), R6, R9;\n"
"ADDR  R1.w, -R1, c[2].x;\n"
"MOVR  R6.xyz, R0;\n"
"MULR  R8.xyz, R8, R1.w;\n"
"MADR  R6.xyz(NE.x), R0.w, -R8, R0;\n"
"MOVR  R0.xyz, R1;\n"
"ADDR  R0.xyz(NE.x), R1, R7;\n"
"MOVR  R0.w, R2.y;\n"
"MOVR  R0.w(GT.y), -R2.y;\n"
"MULR  R1.x, R0.w, c[6].w;\n"
"FLRR  R1.y, R1.x;\n"
"ADDR  R1.z, R1.x, -R1.y;\n"
"MOVXC RC.x, R1;\n"
"MOVR  R0.w, R1.z;\n"
"ADDR  R0.w(LT.x), R1.z, -c[5].z;\n"
"MOVR  R1.x, R1.y;\n"
"ADDR  R1.x(LT), R1.y, c[5].z;\n"
"MADR  R9.y, R1.x, c[6].w, R2.x;\n"
"ADDR  R9.x, R0.w, c[7].y;\n"
"TEX   R1.xyz, R9, texture[0], 2D;\n"
"ADDR  R2.xyz, -R3, R1;\n"
"DP3R  R0.w, R2, R2;\n"
"RSQR  R0.w, R0.w;\n"
"TEX   R1.xyz, R9, texture[2], 2D;\n"
"MULR  R8.xyz, R0.w, R2;\n"
"ADDR  R1.xyz, -R4, R1;\n"
"DP3R  R1.w, R1, R8;\n"
"MADR  R8.xyz, -R1.w, R8, R1;\n"
"RCPR  R1.w, R0.w;\n"
"SLER  H0.y, R1.w, c[2].x;\n"
"ADDR  R1.w, -R1, c[2].x;\n"
"MULXC HC.x, H0, H0.y;\n"
"MOVR  R7.xyz, R5;\n"
"ADDR  R7.xyz(NE.x), R5, R8;\n"
"MOVR  R5.xyz, R6;\n"
"MULR  R2.xyz, R2, R1.w;\n"
"MADR  R5.xyz(NE.x), R0.w, -R2, R6;\n"
"MOVR  R6.xyz, R0;\n"
"ADDR  R6.xyz(NE.x), R0, R1;\n"
"ADDR  R8.w, R8, c[5].z;\n"
"ENDLOOP;\n"
"ADDR  R7.w, R7, c[5].z;\n"
"ENDLOOP;\n"
"ADDR  R3.w, R3, c[5].z;\n"
"ENDLOOP;\n"
"SLERC HC.x, R3.y, c[2];\n"
"MADR  R1.xyz, R4.y, c[7].zwzw, -R4;\n"
"MOVR  R0.xyz, R7;\n"
"ADDR  R0.xyz(NE.x), R7, R1;\n"
"MOVR  R1.xyz, R6;\n"
"ADDR  R1.xyz(NE.x), R6, -R4;\n"
"MOVR  R2.xyz, R5;\n"
"ADDR  R0.w, R3.y, -c[2].x;\n"
"MADR  R2.xyz(NE.x), -R0.w, c[7].zwzw, R5;\n"
"MOVR  R5.xyz, R2;\n"
"MOVR  R6.xyz, R1;\n"
"MOVR  R7.xyz, R0;\n"
"ENDIF;\n"
"MULR  R0.xyz, R5.w, R6;\n"
"MADR  R0.xyz, R4.w, R5, R0;\n"
"MADR  R1.xyz, R7, c[8].y, R0;\n"
"MOVR  R0.xyz, c[3];\n"
"MULR  R0.xyz, R0, c[1].x;\n"
"MOVR  R2.xyz, R0;\n"
"SLTR  H0.x, R3.y, c[8];\n"
"SGER  H0.y, R3, c[4];\n"
"MULXC HC.x, H0, H0.y;\n"
"ADDR  R2.xyz(NE.x), R0, R1;\n"
"TEX   R0.xyz, fragment.texcoord[0], texture[3], 2D;\n"
"MULR  R1.xyz, R2.zyxw, R0.xzyw;\n"
"MOVR  R2.w, c[4].y;\n"
"MADR  oCol1.xyz, R2.zxyw, R0.yzxw, -R1.yxzw;\n"
"MOVR  oCol, R2;\n"
"MOVR  oCol1.w, c[4].y;\n"
"END\n"
"# 219 instructions, 12 R-regs, 3 H-regs\n"
;



class ShaderRigidBody{
	CGcontext cg_context;
	CGprofile fp_profile;
	CGprofile vp_profile;

	CGprogram renderRigidBodyVPShader;
	CGparameter modelViewPMtxRRB;
	CGparameter modelViewMtxRRB;

	CGprogram updatePosFPShader;
	CGprogram updateQuatFPShader;
	CGprogram updateDerivFPShader;

	CGprogram renderParticlesVPShader;
	CGparameter modelViewPMtxRP;
	CGprogram computeParticleDistributionFPShader;

	CGprogram set2BucketVPShader;
	CGprogram set2BucketFPShader;


	CGprogram collisionFPShader;
	CGprogram computeForceOnParticleFPShader;

public:
	void init();
	void enableFP();
	void disableFP();
	void enableVP();
	void disableVP();

	void renderRigidBodyVP();
	void updatePosFP();
	void updateQuatFP();
	void updateDerivFP();

	void renderParticlesVP();
	void computeParticleDistributionFP();

	void set2Bucket();

	void collisionFP();
	void computeForceOnParticleFP();

private:
	void reportCgCompilerError();
};

void ShaderRigidBody::init(){
	if(cgGLIsProfileSupported(CG_PROFILE_VP40))
		vp_profile = CG_PROFILE_VP40;
	else
		exit(1);
	
	if(cgGLIsProfileSupported(CG_PROFILE_FP40))
		fp_profile = CG_PROFILE_FP40;
	else
		exit(1);

	cg_context = cgCreateContext();

	renderRigidBodyVPShader = cgCreateProgramFromFile(cg_context,CG_SOURCE,"renderRigidBodyVP.cg",vp_profile,NULL,NULL);
	cgGLLoadProgram(renderRigidBodyVPShader);
	reportCgCompilerError();
	modelViewPMtxRRB=cgGetNamedParameter(renderRigidBodyVPShader,"modelViewProjMatrix");
	modelViewMtxRRB=cgGetNamedParameter(renderRigidBodyVPShader,"modelViewMatrix");

	updatePosFPShader = cgCreateProgram(cg_context,CG_OBJECT,(const char *)fp2,fp_profile,NULL,NULL);
//	updatePosFPShader = cgCreateProgramFromFile(cg_context,CG_OBJECT,"shaders/2.fp",fp_profile,NULL,NULL);
	cgGLLoadProgram(updatePosFPShader);
	reportCgCompilerError();

	updateQuatFPShader = cgCreateProgram(cg_context,CG_OBJECT,(const char *)fp3,fp_profile,NULL,NULL);
//	updateQuatFPShader = cgCreateProgramFromFile(cg_context,CG_OBJECT,"shaders/3.fp",fp_profile,NULL,NULL);
	cgGLLoadProgram(updateQuatFPShader);
	reportCgCompilerError();

	updateDerivFPShader = cgCreateProgram(cg_context,CG_OBJECT,(const char *)fp4,fp_profile,NULL,NULL);
//	updateDerivFPShader = cgCreateProgramFromFile(cg_context,CG_OBJECT,"shaders/4.fp",fp_profile,NULL,NULL);
	cgGLLoadProgram(updateDerivFPShader);
	reportCgCompilerError();

	renderParticlesVPShader = cgCreateProgram(cg_context,CG_OBJECT,(const char *)fp5,vp_profile,NULL,NULL);
//	renderParticlesVPShader = cgCreateProgramFromFile(cg_context,CG_OBJECT,"shaders/5.vp",vp_profile,NULL,NULL);
	cgGLLoadProgram(renderParticlesVPShader);
	reportCgCompilerError();
	modelViewPMtxRP=cgGetNamedParameter(renderParticlesVPShader,"modelViewProjMatrix");

	computeParticleDistributionFPShader = cgCreateProgram(cg_context,CG_OBJECT,(const char *)fp6,fp_profile,NULL,NULL);
//	computeParticleDistributionFPShader = cgCreateProgramFromFile(cg_context,CG_OBJECT,"shaders/6.fp",fp_profile,NULL,NULL);
	cgGLLoadProgram(computeParticleDistributionFPShader);
	reportCgCompilerError();

	set2BucketFPShader = cgCreateProgram(cg_context,CG_OBJECT,(const char *)fp7,fp_profile,NULL,NULL);
//	set2BucketFPShader = cgCreateProgramFromFile(cg_context,CG_OBJECT,"shaders/7.fp",fp_profile,NULL,NULL);
	cgGLLoadProgram(set2BucketFPShader);
	reportCgCompilerError();

	set2BucketVPShader = cgCreateProgram(cg_context,CG_OBJECT,(const char *)fp8,vp_profile,NULL,NULL);
//	set2BucketVPShader = cgCreateProgramFromFile(cg_context,CG_OBJECT,"shaders/8.vp",vp_profile,NULL,NULL);
	cgGLLoadProgram(set2BucketVPShader);
	reportCgCompilerError();

	collisionFPShader = cgCreateProgram(cg_context,CG_OBJECT,(const char *)fp9,fp_profile,NULL,NULL);
//	collisionFPShader = cgCreateProgramFromFile(cg_context,CG_OBJECT,"shaders/9.fp",fp_profile,NULL,NULL);
	cgGLLoadProgram(collisionFPShader);
	reportCgCompilerError();

	computeForceOnParticleFPShader = cgCreateProgram(cg_context,CG_OBJECT,(const char *)fp0,fp_profile,NULL,NULL);
//	computeForceOnParticleFPShader = cgCreateProgramFromFile(cg_context,CG_OBJECT,"shaders/0.fp",fp_profile,NULL,NULL);
	cgGLLoadProgram(computeForceOnParticleFPShader);
	reportCgCompilerError();
}
void ShaderRigidBody::reportCgCompilerError(){
	CGerror error = cgGetError();
	if(error != CG_NO_ERROR){
		printf("-----------SHADER LOAD ERROR-----------------------------\n");
//		printf(cgGetLastListing(cg_context));
		exit(0);
	}
}
void ShaderRigidBody::enableFP(){
	cgGLEnableProfile(fp_profile);
}
void ShaderRigidBody::disableFP(){
	cgGLDisableProfile(fp_profile);
}
void ShaderRigidBody::enableVP(){
	cgGLEnableProfile(vp_profile);
}
void ShaderRigidBody::disableVP(){
	cgGLDisableProfile(vp_profile);
}

void ShaderRigidBody::renderRigidBodyVP(){
	enableVP();
	cgGLBindProgram(renderRigidBodyVPShader);
	cgGLSetStateMatrixParameter(modelViewPMtxRRB,
		CG_GL_MODELVIEW_PROJECTION_MATRIX,
		CG_GL_MATRIX_IDENTITY);	
	cgGLSetStateMatrixParameter(modelViewMtxRRB,
		CG_GL_MODELVIEW_MATRIX,
		CG_GL_MATRIX_IDENTITY);	
}
void ShaderRigidBody::updatePosFP(){
	enableFP();
	cgGLBindProgram(updatePosFPShader);
}
void ShaderRigidBody::updateQuatFP(){
	enableFP();
	cgGLBindProgram(updateQuatFPShader);
}
void ShaderRigidBody::updateDerivFP(){
	enableFP();
	cgGLBindProgram(updateDerivFPShader);
}
void ShaderRigidBody::renderParticlesVP(){
	enableVP();
	cgGLBindProgram(renderParticlesVPShader);
	cgGLSetStateMatrixParameter(modelViewPMtxRP,
		CG_GL_MODELVIEW_PROJECTION_MATRIX,
		CG_GL_MATRIX_IDENTITY);	
}
void ShaderRigidBody::computeParticleDistributionFP(){
	enableFP();
	cgGLBindProgram(computeParticleDistributionFPShader);
}
void ShaderRigidBody::set2Bucket(){
	enableFP();
	enableVP();
	cgGLBindProgram(set2BucketFPShader);
	cgGLBindProgram(set2BucketVPShader);
}
void ShaderRigidBody::collisionFP(){
	enableFP();
	cgGLBindProgram(collisionFPShader);
}
void ShaderRigidBody::computeForceOnParticleFP(){
	enableFP();
	cgGLBindProgram(computeForceOnParticleFPShader);
}
